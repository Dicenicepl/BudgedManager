@model BudgedManager.Models.Entity.Expense

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

@*todo function is for testing, for production create proper one*@
<script>
        async function GetLimitClass(){
            let id = document.getElementById("Category-input");
            
            const response = await fetch("http://localhost:5062/Limit/LimitWarning?categoryId=" + id.value,{
                method: "GET",
                headers:{
                    "Content-Type": "application/json"
                },
            })

            const data = await response.json();
            
            let limitWarning, limitAlert
            
            limitWarning = data.LimitWarning;
            limitAlert = data.LimitAlert;
            
            const userInput = document.getElementById("userInput").value
            
            if (limitWarning > userInput){
                alert("PONAD " + limitWarning)
            }
        }
        function SetDefaultDate(){
            const datetime = new Date(Date.now())
            document.getElementById("Date-input").value = datetime.toISOString().substring(0, 16) //change when it will be 10000 year ;>
        }
        function CreateFormForCategory(){

        }
    </script>

<h4>Expense</h4>
<hr/>
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Amount" class="control-label"></label>
                <input asp-for="Amount" class="form-control" id="userInput"/>
                <span asp-validation-for="Amount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Date" class="control-label"></label>
                <input asp-for="Date" class="form-control" id="Date-input"/>
                <span asp-validation-for="Date" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Category" class="control-label"></label>
                @Html.DropDownListFor(m => m.CategoryId, (SelectList)ViewData["Category"], new { @class = "form-control", @id = "Category-input"})
                <span asp-validation-for="Category" class="text-danger"></span>
            </div>
            <div class="testing">
                <form method="post" action="http://localhost:5062/Category/Create/">
                    <input type="text" class="type">
                    <input type="text" class="type">
                    <button type="submit">Send</button>
                </form>
            </div>
            <div class="form-group">
                <label asp-for="Comment" class="control-label"></label>
                <input asp-for="Comment" class="form-control"/>
                <span asp-validation-for="Comment" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" onclick="GetLimitClass()"/>
                <input type="button" onclick="SetDefaultDate()">
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

